[{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;\n","date":1536476400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536476400,"objectID":"6a451186c775f5f0adb3a0416d0cb711","permalink":"artorhem.github.io/tutorial/example/","publishdate":"2018-09-09T00:00:00-07:00","relpermalink":"artorhem.github.io/tutorial/example/","section":"tutorial","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;","tags":null,"title":"Example Page","type":"docs"},{"authors":["Puneet Mehrotra","Amanda Carbonari","Peter Chen","Ivan Beschastnikh","Andrew Warfield"],"categories":null,"content":"Click on the Slides button above to view the built-in slides feature.\n -- ","date":1526022000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1526022000,"objectID":"cd6d9d084287506b4668ad90c6aff50a","permalink":"artorhem.github.io/talk/example-talk/","publishdate":"2018-05-11T00:00:00-07:00","relpermalink":"artorhem.github.io/talk/example-talk/","section":"talk","summary":"Click on the Slides button above to view the built-in slides feature.\n -- ","tags":[],"title":"Cross-platform Data Integrity and Confidentiality with Graduated Access Control","type":"talk"},{"authors":null,"categories":null,"content":" Revelio is a tool that statically analyses Python code for known vulnerabilities. The tool provides a IDE plugin for Sublime for highlighting vulnerabilities as well as a command-line interfaces that provides the following features:\n Detection of vulnerable functions Detection of dependencies with vulnerabilities Automatic replacement of vulnerable function with safe alternatives Automatically running tests Detecting and updating outdated dependencies Downloading and analyzing of GitHub repositories as well as local files Automatically creating pull-requests to GitHub repositories to fix vulnerable functions  Currently, Revelio is just a prototype which was developed as part of a Software Engineering course.\nInstallation  Download the source code of the tool Install all requirements: pip install -r requirements.txt  Configuration In order for the tool to access the Github API the Github username and password need to be set as environment variables: export GITHUB_USER=\u0026lt;user\u0026gt; and export GITHUB_PASSWORD=\u0026lt;password\u0026gt;.\nUsage To analyze a local repository the path must be provided:\npython cli.py --path \u0026quot;/local/path\u0026quot;\nTo analyze a remote repository on github the URL to the repository must be provided:\npython cli.py --url \u0026quot;\u0026lt;URL\u0026gt;\u0026quot;\nTo access the github repository the API access token needs to be set (see Configuration).\nCollected Data For analyzed github repositories metrics will be collected in /tmp in metrics.json.\nDocker To build the container:\ndocker build -t 507 .\nTo run the container:\ndocker run --name 507 -v /tmp/dock:/tmp -e GITHUB_USER=\u0026quot;username\u0026quot; -e GITHUB_PASSWORD=\u0026quot;password\u0026quot; 507 \u0026amp;\nTo remove the container:\ndocker rm 507\nSupported Testing Frameworks The space of Python testing is very fragmented, and there is not universal method of writing testcases. To make the process simple and extensible, we use the tox test framework, that simplifies the execution of the tests. We look at the standard locations to discover tests, and support the standard testing mechanisms. Here are our assumptions:\n The tests are placed in the ${project}/test[s] directory\n The requirements necessary are present in a requirements.txt file. Often developers specify multiple versions of this file. We look for all files in the repository that have a name starting with \u0026lsquo;requirements\u0026rsquo; to include for installation in the virtualenv.\n The supported methods of testing the project are: setup.py with a test recipe, py.tests, nosetests, and plain old unittests.\n  Known issues and fixes When running tox in the macOS terminal the following error might ocurr:\nunknown locale: UTF-8 in Python\n","date":1461740400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461740400,"objectID":"5baf35d955a49003f5750a7a82f9ee0f","permalink":"artorhem.github.io/project/revelio/","publishdate":"2016-04-27T00:00:00-07:00","relpermalink":"artorhem.github.io/project/revelio/","section":"project","summary":"A tool for doing static analysis of Python code for known vulnerabilities","tags":["Software Engineering"],"title":"Revelio","type":"project"},{"authors":null,"categories":null,"content":"Security of data is tightly coupled to its access policy. However, in practice, a data owner has control of his data\u0026rsquo;s access policies only as far as the boundaries of his own systems. In this paper, we introduce graduated access control, which provides mobile, programmable, and dynamically-resolving policies for access control that extends a data owner\u0026rsquo;s policies across system boundaries. We realize this through a novel data-centric abstraction called trusted capsules and its associated system, the trusted data monitor.\nA trusted capsule couples data and policy into a single mobile unit. A capsule is backwards-compatible and is indistinguishable from a regular file to applications. In coordination with the trusted data monitor a capsule provides data integrity and confidentiality on remote devices, strong authentication to a trusted capsule service, and supports nuanced and dynamic access control decisions on remote systems. We implemented our data monitor using ARM TrustZone.\nWe show that graduated access control can express novel and useful real world policies, such as revocation, remote monitoring, and risk-adaptable disclosure. We illustrate trusted capsules for different file formats, including JPEG, FODT, and PDF. We also show compatibility with unmodified applications, such as LibreOffice Writer, Evince, and VLC.\n","date":1461740400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461740400,"objectID":"535d24f6b95725ecf701f6f4fc105dd2","permalink":"artorhem.github.io/project/trusted_capsules/","publishdate":"2016-04-27T00:00:00-07:00","relpermalink":"artorhem.github.io/project/trusted_capsules/","section":"project","summary":"ARM TrustZone backed data privacy on remote devices","tags":["Security"],"title":"Trusted Capsules","type":"project"},{"authors":[],"categories":null,"content":" Academic is a framework to help you create a beautiful website quickly. Perfect for personal sites, blogs, or business/project sites. Check out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes. Then head on over to the Quick Start guide or take a look at the Release Notes.\n\nKey features:\n Easily manage various content including homepage, blog posts, publications, talks, and projects Extensible via color themes and widgets/plugins Write in Markdown for easy formatting and code highlighting, with LaTeX for mathematical expressions Social/academic network linking, Google Analytics, and Disqus comments Responsive and mobile friendly Simple and refreshing one page design Multilingual and easy to customize  Color Themes Academic is available in different color themes and font themes.\n       Install You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Quick install using your web browser  Install Academic with Netlify  Netlify will provide you with a customizable URL to access your new site  On GitHub, go to your newly created academic-kickstart repository and edit config.toml to personalize your site. Shortly after saving the file, your site will automatically update Read the Quick Start Guide to learn how to add Markdown content. For inspiration, refer to the Markdown content which powers the Demo  Install with Git Prerequisites:\n Download and install Git Download and install Hugo   Fork the Academic Kickstart repository and clone your fork with Git:\ngit clone https://github.com/sourcethemes/academic-kickstart.git My_Website  Note that if you forked Academic Kickstart, the above command should be edited to clone your fork, i.e. replace sourcethemes with your GitHub username.\n Initialize the theme:\ncd My_Website git submodule update --init --recursive   Install with ZIP  Download and extract Academic Kickstart Download and extract the Academic theme to the themes/academic/ folder from the above step  Install with RStudio View the guide to installing Academic with RStudio\nQuick start  If you installed on your computer, view your new website by running the following command:\nhugo server  Now visit localhost:1313 and your new Academic powered website will appear. Otherwise, if using Netlify, they will provide you with your URL.\n Read the Quick Start Guide to learn how to add Markdown content, customize your site, and deploy it. For inspiration, refer to the Markdown content which powers the Demo\n Build your site by running the hugo command. Then host it for free using Github Pages or Netlify (refer to the first installation method). Alternatively, copy the generated public/ directory (by FTP, Rsync, etc.) to your production web server (such as a university\u0026rsquo;s hosting service).\n  Updating Feel free to star the project on Github to help keep track of updates and check out the release notes prior to updating your site.\nBefore updating the framework, it is recommended to make a backup of your entire website directory (or at least your themes/academic directory) and record your current version number.\nBy default, Academic is installed as a Git submodule which can be updated by running the following command:\ngit submodule update --remote --merge  Check out the update guide for full instructions and alternative methods.\nFeedback \u0026amp; Contributing Please use the issue tracker to let me know about any bugs or feature requests, or alternatively make a pull request.\nFor support, head over to the Hugo discussion forum.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461135600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1515830400,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"artorhem.github.io/post/getting-started/","publishdate":"2016-04-20T00:00:00-07:00","relpermalink":"artorhem.github.io/post/getting-started/","section":"post","summary":"Create a beautifully simple website or blog in under 10 minutes.","tags":["Academic"],"title":"Academic: the website designer for Hugo","type":"post"},{"authors":["GA Cushen"],"categories":null,"content":"More detail can easily be written here using Markdown and $\\rm \\LaTeX$ math code.\n","date":1441090800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441090800,"objectID":"5cec0ce6e082b377c504bc66cdf990c5","permalink":"artorhem.github.io/publication/person-re-identification/","publishdate":"2015-09-01T00:00:00-07:00","relpermalink":"artorhem.github.io/publication/person-re-identification/","section":"publication","summary":"Person re-identification is a critical security task for recognizing a person across spatially disjoint sensors. Previous work can be computationally intensive and is mainly based on low-level cues extracted from RGB data and implemented on a PC for a fixed sensor network (such as traditional CCTV). We present a practical and efficient framework for mobile devices (such as smart phones and robots) where high-level semantic soft biometrics are extracted from RGB and depth data. By combining these cues, our approach attempts to provide robustness to noise, illumination, and minor variations in clothing. This mobile approach may be particularly useful for the identification of persons in areas ill-served by fixed sensors or for tasks where the sensor position and direction need to dynamically adapt to a target. Results on the BIWI dataset are preliminary but encouraging. Further evaluation and demonstration of the system will be available on our website.","tags":[],"title":"A Person Re-Identification System For Mobile Devices","type":"publication"},{"authors":["GA Cushen","MS Nixon"],"categories":null,"content":"More detail can easily be written here using Markdown and $\\rm \\LaTeX$ math code.\n","date":1372662000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372662000,"objectID":"caae70970030052c8f733b2ca8421a2b","permalink":"artorhem.github.io/publication/clothing-search/","publishdate":"2013-07-01T00:00:00-07:00","relpermalink":"artorhem.github.io/publication/clothing-search/","section":"publication","summary":"We present a mobile visual clothing search system whereby a smart phone user can either choose a social networking photo or take a new photo of a person wearing clothing of interest and search for similar clothing in a retail database. From the query image, the person is detected, clothing is segmented, and clothing features are extracted and quantized. The information is sent from the phone client to a server, where the feature vector of the query image is used to retrieve similar clothing products from online databases. The phone's GPS location is used to re-rank results by retail store location. State of the art work focuses primarily on the recognition of a diverse range of clothing offline and pays little attention to practical applications. Evaluated on a challenging dataset, the system is relatively fast and achieves promising results.","tags":[],"title":"Mobile visual clothing search","type":"publication"},{"authors":null,"categories":null,"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c2915ec5da95791851caafdcba9664af","permalink":"artorhem.github.io/slides/example-slides/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"artorhem.github.io/slides/example-slides/","section":"slides","summary":"Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$","tags":null,"title":"Slides","type":"slides"}]